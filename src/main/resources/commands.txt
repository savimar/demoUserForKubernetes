 
 minikube start 

 minikube start --driver=hyperv  --cpus=8 --memory=12g --cni=flannel --kubernetes-version="v1.19.0"
 
 minikube addons enable ingress 

 helm repo add bitnami https://charts.bitnami.com/bitnami

 helm repo update
 
 kubectl create ns app

 kubectl config set-context --current --namespace=app


 cd C:\Users\Maria\IdeaProjects\demoUserForKubernetes\src\main\resources\db_yaml
 
 kubectl apply -f user-config.yaml  
 
 helm install postrgedb bitnami/postgresql -f values.yaml 

 kubectl apply -f initdb.yaml

  kubectl delete -A ValidatingWebhookConfiguration ingress-nginx-admission 

  kubectl apply -f C:\Users\Maria\IdeaProjects\demoUserForKubernetes\src\main\resources
 
 kubectl get all  (ждем когда поднимутся поды)
 
 #db

 (проверка данных в БД)
  cd "F:\Program Files\PostgreSQL\13\bin"
 .\psql -h  172.31.170.123 -p 31508 -U postgres -W users (port NodePort service/pg, host - minikube ip)
 Пароль: root
 select * from users;
 select * from customer;

 \q

 kubectl logs pod/savimar-deployment-6889bb7d56-5jkxf
 
 curl  http://arch.homework/customers
  
  kubectl get all --all-namespaces   
  
  kubectl get ingress --all-namespaces   

   kubectl describe pod/pg-0
 

     kubectl delete deployment.apps/savimar-deployment


  
 #monitoring

 helm repo add prometheus-community https://prometheus-community.github.io/helm-charts

  helm repo add stable https://charts.helm.sh/stable

 helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx

 helm repo update


 cd C:\Users\Maria\IdeaProjects\demoUserForKubernetes\src\main\resources\metrics
  

 kubectl create namespace monitoring

  kubectl config set-context --current --namespace=monitoring


 helm install -n monitoring prom prometheus-community/kube-prometheus-stack -f prometheus.yaml --atomic

  kubectl config set-context --current --namespace=default

 kubectl apply -f servicemonitor.yaml   --validate=false

 kubectl get servicemonitor --all-namespaces
 
 #helm install  nginx ingress-nginx/ingress-nginx -f nginx-ingress.yaml --atomic


 
 
  kubectl port-forward service/prom-kube-prometheus-stack-prometheus 9090
  
    kubectl port-forward service/prom-grafana 9000:80


  

  while 1; do ab -n 50 -c 5 http://192.168.99.100:30259/db ; sleep 3; 

  cd f:/ab/Apache24/bin
  .\ab -n 50 -c 5 http://192.168.99.100:32449/db/
  .\ab -n 50 -c 5 http://192.168.99.100:30259/

   .\ab -n 10000 -c 50 -t 3  -r -t 3000 http://192.168.99.100:30172/
 
 
 rpc sum(rate(http_server_requests_seconds_count{pod="savimar-deployment-5796ffb6b4-nclgz"}[2m]))
 latency histogram_quantile(0.9, sum by (le) (rate(http_server_requests_seconds_bucket{pod="savimar-deployment-5796ffb6b4-nclgz"}[5m])))

 

 500  sum by (status) (increase(http_server_requests_seconds_count{pod="savimar-deployment-5796ffb6b4-nclgz", status=~"5.+"}[1m]))

#keycloak

#helm repo add codecentric https://codecentric.github.io/helm-charts
helm repo add bitnami https://charts.bitnami.com/bitnami
helm repo update


cd C:\Users\Maria\IdeaProjects\demoUserForKubernetes\src\main\resources\keycloak
#helm install keycloak codecentric/keycloak -f  keycloak.yaml 
helm install keycloak bitnami/keycloak -f  keycloak.yaml 
T0VMDueBwz
kubectl --namespace app port-forward pod/keycloak-0 8080
123

curl -X POST 'http://localhost:8080/auth/realms/SpringBootKeycloak/protocol/openid-connect/token' --header 'Content-Type: application/x-www-form-urlencoded'  --data-urlencode 'grant_type=password' --data-urlencode 'client_id=login-app' --data-urlencode 'client_secret=c50e79ae-52eb-466a-8c2b-a520f2b8fc22'  --data-urlencode 'username=user1'  --data-urlencode 'password=1'
